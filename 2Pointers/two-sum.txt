works and fast:

class Solution {
public:
    vector<int> twoSum(vector<int>& n, int t) 
    {
        int s=n.size();
        for(int i=0;i<s; i++)
        {
            for(int j=0; j<s; j++)
            {
                if(i!=j)                  
                    if(n[i]+n[j]==t) 
                        return {i,j};
            }
        }
        return {};
    }
};

=====================================================================
faster:

class Solution {
public:
  std::vector<int> twoSum(std::vector<int>& n, int t) 
  {
    std::unordered_map<int, int> seen;
    int s=n.size();
    for (int i = 0; i < s; ++i) 
    {
        if (seen.find(n[i]) != seen.end()) 
        {
            return {seen[n[i]], i};
        } 
        else 
        {
            seen.insert({t - n[i], i});
        }
    }
    return {};
  }
};
#include <iostream> 
#include <set> 
#include <vector> 
#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    Solution(){
        ios_base::sync_with_stdio(0);
        cin.tie(0);
    }
    int singleNumber(vector<int>& v) 
    {
        int ip=0;
        for(int i : v)  ip ^=i;
        return ip;
    }
};

int main()
{
   Solution s;
   vector<int> v = {1,0,1};
   cout<<s.singleNumber(v);
   return 0;
}

==========================================================================


algo:

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        if(nums.size()<1){
            return 0;
        }
        
        // without modifying the array
        
        int h=0, t=0;
        while(1){         // find the element at the index = duplicate number
            t=nums[t];
            h=nums[nums[h]];
             //cout<<t<<" "<<h<<endl;
            if(t==h)
                break;
        }
        
        t=0; // result value from start h = nums[duplicate]
        while(t != h) {
            t = nums[t] ; // t moves across the array from ele to ele 
                        // all ele except one are unique so t moves over elements
            h = nums[h]; // h alternates between the duplicate and its value nums[duplicate]
        }
        
        return t;
    }
};

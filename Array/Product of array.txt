Time exeed but works:

#include <iostream> 
#include <set> 
#include <vector> 
#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& v) 
    {
        int n=v.size(),a;
        vector<int> ans;
        for(int i=0; i<n; i++)
        {
            a=1;
            for(int j=0; j<n; j++)
            {
                if(j!=i)
                {
                    a=a*v[j];
                }
            }
            ans.push_back(a);
        }
        return ans;
    }
};

int main()
{
   Solution s;
   vector<int> v = {0,0};
   
   vector<int> a = s.findDisappearedNumbers(v);
   
   for(int i=0; i < a.size(); i++)
   std::cout << a.at(i) << ' ';
   
   
   return 0;
}

========================================================================

best:


class Solution {
public:
    vector<int> productExceptSelf(vector<int>& v) 
    {
        int n=v.size(),a;
        vector<int> ans(n);
        ans[0]=1;
        for(int i=1; i<n; i++)
        {
            ans[i]= v[i-1] * ans[i-1];
        }
        
        int r=1;
        for(int i=n-1; i>=0; i--)
        {
            ans[i] = ans[i]*r;
            r *= v[i];
        }
        return ans;
        
    }
};